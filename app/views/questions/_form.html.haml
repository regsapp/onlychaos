/ :javascript
/   $(function() {
/     function makePreview(inputSelector, previewSelector) {
/       input = $(inputSelector).val();
/       $(previewSelector).html(input);
/       previewId =  previewSelector.replace('#', '');
/       MathJax.Hub.Queue(["Typeset",MathJax.Hub, previewId]);
/     }

/     $('body').keyup(function(){makePreview('#question_correct_answer', '#answer_preview')});
/     $('body').bind('updated',function(){makePreview('#question_correct_answer', '#answer_preview')});
/     makePreview('#question_correct_answer', '#answer_preview');
/   });

:javascript
  $(function(){
    function is_ckeditor_initialized(id){
      return CKEDITOR.instances[id] ? true : false;
    }

    function init_ckeditor(id){
      if (typeof CKEDITOR != 'undefined') {
        CKEDITOR.replace(id, {"language":"en","extraPlugins":"mathjax"});
      } else {
        setTimeout(arguments.callee, 50);
      }
    }

    $('.add_fields').click(function(e){
      e.preventDefault();
      setTimeout(function(){
        $('.ckeditor-part').each(function(){
          var id = $(this).attr('id');
          if(!is_ckeditor_initialized(id)){
            init_ckeditor(id);
          }
        })
      }, 400)
    })
  })

= form_for @question, :html => { :class => "form-horizontal" } do |f|
  -if @question.errors.any?
    .alert.alert-danger.alert-dismissable
      %button.close{"aria-hidden" => "true", "data-dismiss" => "alert", :type => "button"} &times;
      %h4= "#{pluralize(@question.errors.count, "error")} prohibited this question from being saved:"

      %ul
        - @question.errors.full_messages.each do |msg|
          %li= msg
  .form-group
    = f.label :category, :class => 'col-sm-2 control-label'
    .col-sm-10
      = f.collection_select :category_id, Category.all, :id, :name, { prompt: true }, :class => 'form-control'
  .form-group
    = f.label :exam_boards, :class => 'col-sm-2 control-label'
    .col-sm-10
      = hidden_field_tag "question[exam_board_ids][]", nil
      - ExamBoard.all.each do |exam_board|
        = check_box_tag "question[exam_board_ids][]", exam_board.id, @question.exam_board_ids.include?(exam_board.id), id: dom_id(exam_board)
        = label_tag dom_id(exam_board), exam_board.name
        %br
  .form-group
    = f.label :description, :class => 'col-sm-2 control-label'
    .col-sm-10
      = f.cktext_area :description, :class => 'col-sm-2 control-label', :ckeditor => ckeditor_params
  .form-group
    = f.label :hint, :class => 'col-sm-2 control-label'
    .col-sm-10
      = f.cktext_area :hint, :class => 'col-sm-2 control-label', :ckeditor => ckeditor_params

  %h3 Parts

  %ul
    = f.fields_for :question_parts, @question.question_parts do |builder|
      = render 'question_part_fields', f: builder
      = link_to_add_fields 'Add Part', f, :question_parts

    %hr

  .form-group
    .col-sm-offset-2.col-sm-10
      = f.submit :class => 'btn btn-primary'
